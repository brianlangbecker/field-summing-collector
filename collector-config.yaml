receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  # Group spans by trace for proper field summing across spans
  groupbytrace:
    wait_duration: 10s
    num_traces: 100

  # Transform processor to mark spans for field summing
  transform:
    trace_statements:
      - context: span
        statements:
          # Mark getData spans for field summing (actual summing requires custom processor)
          - set(attributes["needs_field_summing"], true) where name == "compute.v1.ComputeEngine/getData" and attributes["service.name"] == "appserver"
          - set(attributes["signal_read_span"], true) where name == "data.signal.v1.Signal/read" and attributes["service.name"] == "datasource-proxy"

  # Batch processor for performance
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

exporters:
  # Export traces with summed fields to Honeycomb
  otlp/honeycomb:
    endpoint: "https://api.honeycomb.io:443"
    headers:
      "x-honeycomb-team": "${HONEYCOMB_API_KEY}"
      "x-honeycomb-dataset": "field-summing-traces"
      
  # Debug logging
  debug:
    verbosity: detailed

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [groupbytrace, transform, batch]
      exporters: [otlp/honeycomb, debug]